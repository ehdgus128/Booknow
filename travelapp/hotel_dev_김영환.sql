-- 예약 페이지 작업 sql


-- CREATE TABLE tlbook.tbl_ht_reservations(
--     htResNo number(10,0),
--     htRooSellDateId number(10,0),
--     htResName varchar2(30),
--     htResStatus number(1,0),
--     htResPeopleCount number(2,0),
--     htResCheckIn timestamp(0) default systimestamp,
--     htResCheckOut timestamp(0) default systimestamp,
--     htResEmail varchar2(50) not null,
--     htResPhone varchar2(15) not null
-- )tablespace users;
        --SELECT /*+ INDEX_DESC(M PK_tmBno_mgboards) */ ROWNUM rn, M.*

SELECT HTNO, HTNAME, HTRANK, HTAREACODE, HTTYPE, HTPHONE, 
HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE, HTADDRESS,MINPRICE
FROM (
    SELECT ROWNUM rn, H.HTNO, H.HTNAME, H.HTRANK, H.HTAREACODE, H.HTTYPE, H.HTPHONE, 
    H.HTEMAIL, H.BUSID, H.HTSTARTDATE, H.HTENDDATE, H.HTAVAILDATE, H.HTADDRESS,
    M.MINPRICE
    FROM tlbook.TBL_HOTELS H
    LEFT OUTER JOIN (
    SELECT R.HTNO, MIN(S.HTROOSELLPRICE) minprice
    FROM tlbook.TBL_HT_ROOMS R
    JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
    ON R.HTROONO = S.HTROONO
    GROUP BY R.HTNO
    ) M
    ON H.HTNO = M.HTNO
    WHERE 
    (
        htAreaCode = '서울'
    )
    AND
    (
    TO_TIMESTAMP('2023/07/01','yyyy-MM-dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
	AND TO_TIMESTAMP('2023/07/02','yyyy-MM-dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
    )
    AND
    ROWNUM <= ( 1* 5 )
)      
WHERE rn >=  ( ( 1 * 5- ( 5- 1)))
ORDER by HTRANK DESC NULLS LAST;



SELECT TO_CHAR(TO_DATE('2023/06/07','yyyy/MM/dd') +LEVEL-1, 'yyyy/MM/dd')
FROM DUAL
CONNECT BY LEVEL <= (TO_DATE('2023/06/10', 'yyyy/MM/dd')-TO_DATE('2023/06/07', 'yyyy/MM/dd')+1);

SELECT TO_DATE('2023/06/10', 'yyyy/MM/dd')-TO_TIMESTAMP('2023/06/07', 'yyyy/MM/dd')+1
FROM DUAL;



SELECT R.HTROONO, MIN(S.HTROOSELLPRICE) HTROOSELLPRICE, MIN(R.HTROOTYPE) HTROOTYPE, MIN(R.HTROONAME) HTROONAME
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
WHERE HTNO = 500
AND S.HTROOSELLDATE
BETWEEN TO_TIMESTAMP('2023/07/07', 'yyyy/MM/dd')
AND TO_TIMESTAMP('2023/07/10', 'yyyy/MM/dd')
AND S.HTRESNO IS NULL
GROUP BY R.HTROONO
HAVING (
    CASE
        WHEN COUNT(*) = ROUND(TO_DATE('2023/07/10','yyyy/MM/dd')-TO_DATE('2023/07/07', 'yyyy/MM/dd')+1)
        THEN 'true'
        ELSE 'false'
    END
) ='true';




SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE, HTROONO, HTRESNO
FROM tlbook.TBL_HT_ROOM_SELL_DATE;

SELECT HTROONO, HTROOTYPE, HTROOPRICE, HTNO, HTROONAME
FROM tlbook.TBL_HT_ROOMS;

SELECT HTREVNO, HTREVSTAR, HTREVLIKE, HTREVTITLE, 
HTREVCONTENTS, HTREVREGDATE, HTREVDELFLAG, HTNO, USERID
FROM tlbook.HT_REVIEWS
WHERE HTNO = 500
ORDER by 1 DESC;

alter TABLE tlbook.HT_REVIEWS
DROP COLUMN HTREVTITLE;

UPDATE tlbook.HT_REVIEWS
SET HTREVSTAR = 5,
HTREVCONTENTS = '수정할게요',
HTREVREGDATE = SYSDATE
WHERE HTREVNO = 802;

UPDATE tlbook.HT_REVIEWS
SET HTREVDELFLAG = 1
WHERE HTREVNO = 802;

DELETE FROM tlbook.HT_REVIEWS
WHERE HTREVNO = 802;

INSERT INTO tlbook.HT_REVIEWS
VALUES(
    tlbook.SEQ_HT_REVIEWS.NEXTVAL,
    5,
    0,
    '테스트 제목',
    '테스트 내용',
    DEFAULT,
    0,
    500,
    'sss'
);


COMMIT;

ROLLBACK;


SELECT airResno, airRouteno, airLineId, airSellno, airClass, userId , depAirportNm, arrAirportNm, depPlandTime, arrPlandTime
FROM (
    SELECT /*+ INDEX_DESC(PK_AIRRESNO_AIRRESERVATIONS)*/ ROWNUM rn, a.*
    FROM (
        SELECT c.airResno, c.airRouteno, c.airLineId, c.airSellno, c.airClass, c.userId,  b.depAirportNm, b.arrAirportNm, b.depPlandTime, b.arrPlandTime,  ROWNUM
        FROM tlbook.tbl_air_reservations c 
        LEFT JOIN TBL_AIR_ROUTE b 
        ON(c.AIRROUTENO = b.airRouteno)
        WHERE c.userId = 'airways123'  AND b.depPlandTime >=  TO_DATE( '2023/07/10','yyyy-MM-dd') 
        AND b.arrPlandTime <= ( TO_DATE('2023/07/11','yyyy-MM-dd') + INTERVAL '1' DAY )
        AND c.airSellno IS NOT NULL
        ORDER BY c.airResno DESC
    ) a
    WHERE ROWNUM <= (1 * 500 ) 
)      
WHERE rn >=  ( ( 1 * 500- ( 500- 1)));

SELECT HTROONO, HTROOTYPE, HTNO, HTROONAME, 
    HTROOSELLPRICE, HTROOSELLDATE
FROM (
    SELECT /*+ INDEX_DESC(R PK_HTROONO_HT_ROOMS) */ ROWNUM rn, R.HTROONO, R.HTROOTYPE, R.HTNO, R.HTROONAME, 
    S.HTROOSELLPRICE, S.HTROOSELLDATE
    FROM tlbook.TBL_HT_ROOMS R
    JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
    ON R.HTROONO = S.HTROONO
    WHERE S.HTROOSELLDATE = TO_TIMESTAMP('2023/07/12','yyyy/MM/dd')
    AND R.HTNO = 500
    AND ROWNUM <= (1*50)
)
WHERE rn >= ((1*50)-(50-1));


SELECT QNAQNO, QNAQCATEGORY, QNAQTITLE, QNAQCONTENT, 
QNAQWRITER, QNAQREGDATE, QNAQMODDATE, QNAQPROCFLAG,
QNAANO, QNAAREGDATE, QNAAMODDATE, QNAACONTENT, QNAAWRITER
FROM (
    SELECT /*+ INDEX_DESC(A PK_QNAQNO_QNA_QUESTIONS) */ ROWNUM rn, 
A.QNAQNO, A.QNAQCATEGORY, A.QNAQTITLE, A.QNAQCONTENT, 
A.QNAQWRITER, A.QNAQREGDATE, A.QNAQMODDATE, A.QNAQPROCFLAG,
B.QNAANO, B.QNAAREGDATE, B.QNAAMODDATE, B.QNAACONTENT, B.QNAAWRITER
FROM tlbook.TBL_QNA_QUESTIONS A
LEFT OUTER JOIN tlbook.TBL_QNA_ANSWERS B
ON A.QNAQNO = B.QNAQNO
where B.QNAANO IS NOT NULL 
AND A.qnaQcategory LIKE '%호텔%'
AND ROWNUM <= (1*4)
)
WHERE rn >= ((1*4)-(4-1));
               

SELECT A.QNAQNO, A.QNAQCATEGORY, A.QNAQTITLE, A.QNAQCONTENT, 
A.QNAQWRITER, A.QNAQREGDATE, A.QNAQMODDATE, A.QNAQPROCFLAG,
B.QNAANO, B.QNAAREGDATE, B.QNAAMODDATE, B.QNAACONTENT, B.QNAAWRITER
FROM tlbook.TBL_QNA_QUESTIONS A
LEFT OUTER JOIN tlbook.TBL_QNA_ANSWERS B
ON A.QNAQNO = B.QNAQNO
where B.QNAANO IS NOT NULL 
AND A.qnaQcategory LIKE '%호텔%';


SELECT *
FROM tlbook.TBL_AIR_RESERVATIONS R
JOIN tlbook.TBL_AIR_ROUTE_SELL S
ON R.AIRSELLNO = S.AIRSELLNO
JOIN tlbook.TBL_AIR_ROUTE T
ON R.AIRROUTENO = T.AIRROUTENO;


COMMIT;

SELECT H.HTNO, H.HTNAME, H.HTRANK, H.HTAREACODE, H.HTTYPE, H.HTPHONE, 
H.HTEMAIL, H.BUSID, H.HTSTARTDATE, H.HTENDDATE, H.HTAVAILDATE, H.HTADDRESS,
M.MINPRICE
FROM tlbook.TBL_HOTELS H
LEFT OUTER JOIN (
SELECT R.HTNO, MIN(S.HTROOSELLPRICE) minprice
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
GROUP BY R.HTNO
) M
ON H.HTNO = M.HTNO
WHERE TO_TIMESTAMP('2023/07/10','yyyy/MM/dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
AND TO_TIMESTAMP('2023/07/12','yyyy/MM/dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
ORDER BY M.MINPRICE NULLS LAST;

SELECT COUNT(*)
FROM tlbook.TBL_HOTELS H
LEFT OUTER JOIN (
SELECT R.HTNO, MIN(S.HTROOSELLPRICE) minprice
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
GROUP BY R.HTNO
) M
ON H.HTNO = M.HTNO
WHERE TO_TIMESTAMP('2023/07/10','yyyy/MM/dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
AND TO_TIMESTAMP('2023/07/12','yyyy/MM/dd') BETWEEN H.HTSTARTDATE AND H.HTENDDATE
ORDER BY M.MINPRICE NULLS LAST;

SELECT HTNO, HTNAME, HTRANK, HTAREACODE, HTTYPE,
HTPHONE, HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE, HTADDRESS
FROM tlbook.TBL_HOTELS
where HTNO = 500;

UPDATE tlbook.TBL_HOTELS
SET HTSTARTDATE = TO_TIMESTAMP('2023/01/01','yyyy/MM/dd'),
HTENDDATE = TO_TIMESTAMP('2024/01/01','yyyy/MM/dd')-1
WHERE HTNO = 500;

SELECT R.HTNO, MIN(S.HTROOSELLPRICE) minprice
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
GROUP BY R.HTNO;


SELECT R.HTNO, MIN(S.HTROOSELLPRICE)
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
WHERE R.HTNO = 500
GROUP BY R.HTNO;

SELECT HTNO, HTNAME, HTRANK, HTAREACODE, HTTYPE, HTPHONE, HTEMAIL, 
BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE, HTADDRESS
FROM tlbook.TBL_HOTELS;

UPDATE tlbook.TBL_HT_SELL_TRANSACTIONS
SET HTSELLSTATUS = '결제취소',
HTSELLTRANDATE = SYSTIMESTAMP
WHERE SELLUUID = '91319e45-60bd-4e1b-8ef2-6b0838b06159';

UPDATE tlbook.TBL_HT_RESERVATIONS
SET HTRESSTATUS = 0
WHERE HTSELLTRANID = (
    SELECT HTSELLTRANID
    FROM tlbook.TBL_HT_SELL_TRANSACTIONS
    WHERE SELLUUID = '91319e45-60bd-4e1b-8ef2-6b0838b06159'
);

UPDATE tlbook.TBL_HT_ROOM_SELL_DATE
SET HTRESNO = NULL
WHERE HTRESNO = (
    SELECT HTRESNO
    FROM tlbook.TBL_HT_RESERVATIONS
    WHERE HTSELLTRANID = (
        SELECT HTSELLTRANID
        FROM tlbook.TBL_HT_SELL_TRANSACTIONS
        WHERE SELLUUID = '91319e45-60bd-4e1b-8ef2-6b0838b06159'
    )
);

SELECT *
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTRESNO = (
    SELECT HTRESNO
    FROM tlbook.TBL_HT_RESERVATIONS
    WHERE HTSELLTRANID = (
        SELECT HTSELLTRANID
        FROM tlbook.TBL_HT_SELL_TRANSACTIONS
        WHERE SELLUUID = '91319e45-60bd-4e1b-8ef2-6b0838b06159'
    )
);


SELECT HTRESNO
FROM tlbook.TBL_HT_RESERVATIONS
WHERE HTSELLTRANID = (
    SELECT HTSELLTRANID
    FROM tlbook.TBL_HT_SELL_TRANSACTIONS
    WHERE SELLUUID = '91319e45-60bd-4e1b-8ef2-6b0838b06159'
);




SELECT HTROONO, HTROOTYPE, HTNO, HTROONAME, 
    HTROOSELLPRICE, HTROOSELLDATE
FROM (
    SELECT /*+ INDEX_DESC(R PK_HTROONO_HT_ROOMS) */ ROWNUM rn, R.HTROONO, R.HTROOTYPE, R.HTNO, R.HTROONAME, 
    S.HTROOSELLPRICE, S.HTROOSELLDATE
    FROM tlbook.TBL_HT_ROOMS R
    JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
    ON R.HTROONO = S.HTROONO
    WHERE S.HTROOSELLDATE = TO_TIMESTAMP('2023/07/12','yyyy/MM/dd')
    AND R.HTNO = 500
    AND ROWNUM <= (1*50)
)
WHERE rn >= ((1*50)-(50-1));


SELECT R.HTROONO, R.HTROOTYPE, R.HTNO, R.HTROONAME, 
S.HTROOSELLPRICE, S.HTROOSELLDATE
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
WHERE S.HTROOSELLDATE = TO_TIMESTAMP('2023/06/10','yyyy/MM/dd');

SELECT COUNT(*) AS roomTotal
FROM tlbook.TBL_HT_ROOMS
WHERE HTNO = 500;


SELECT HTSELLTRANID, USERID, HTSELLTRANDATE,
HTSELLTRANPAYMENT, HTSELLSTATUS, HTSELLPRICE, HTNO, SELLUUID
FROM tlbook.TBL_HT_SELL_TRANSACTIONS;


SELECT S.HTROONO, ROUND(AVG(S.HTROOSELLPRICE) ,1) AS roomavgprice
FROM tlbook.TBL_HT_ROOMS R
JOIN tlbook.TBL_HT_ROOM_SELL_DATE S
ON R.HTROONO = S.HTROONO
WHERE R.HTNO = 500
AND S.HTROOSELLDATE 
BETWEEN TO_TIMESTAMP('2023/05/01','yyyy/MM/dd')
AND TO_TIMESTAMP('2023/09/01','yyyy/MM/dd')
AND S.HTRESNO IS NULL
GROUP BY S.HTROONO;


SELECT A.MONTH , (A.sellmoney - B.buymoney) monthmoney
FROM (
    SELECT SUM(R.TOTALPRICE) AS sellmoney, TO_CHAR(S.AIRSELLDATE, 'yyyy/MM') MONTH
    FROM tlbook.TBL_AIR_ROUTE_SELL S
    JOIN tlbook.TBL_AIR_RESERVATIONS R
    ON S.AIRSELLNO = R.AIRSELLNO
    GROUP BY TO_CHAR(S.AIRSELLDATE, 'yyyy/MM')
) A JOIN (
    SELECT SUM(AIRROUTEBUYPRICE) buymoney , TO_CHAR(AIRBUYDATE, 'yyyy/MM') MONTH
    FROM tlbook.TBL_AIR_ROUTE_BUY
    GROUP BY TO_CHAR(AIRBUYDATE, 'yyyy/MM')
) B
ON A.MONTH = B.MONTH;


CREATE SEQUENCE tlbook.SEQ_HTREVIEWSTEST START WITH 700;

SELECT tlbook.SEQ_HTREVIEWSTEST.NEXTVAL
FROM DUAL;

SELECT HTREVNO, HTREVSTAR, HTREVLIKE, HTREVTITLE, 
HTREVCONTENTS, HTREVREGDATE, HTREVDELFLAG, HTNO, USERID
FROM HT_REVIEWS
WHERE HTNO = 15
ORDER BY 2 DESC;

INSERT INTO tlbook.HT_REVIEWS
VALUES(
    tlbook.SEQ_HTREVIEWSTEST.NEXTVAL,
    5,
    DEFAULT,
    tlbook.SEQ_HTREVIEWSTEST.CURRVAL||'리뷰제목',
    tlbook.SEQ_HTREVIEWSTEST.CURRVAL||'리뷰내용',
    DEFAULT,
    DEFAULT,
    421,
    'userAdmin'
);


SELECT R.HTROONO, R.HTROOTYPE, R.HTROOPRICE, R.HTNO, R.HTROONAME,
H.HTNAME, H.HTRANK, H.HTADDRESS, H.HTTYPE, H.HTPHONE, 
H.HTEMAIL, H.BUSID, H.HTSTARTDATE, H.HTENDDATE
FROM tlbook.TBL_HT_ROOMS R
INNER JOIN tlbook.TBL_HOTELS H
ON R.HTNO = H.HTNO
WHERE R.HTROONO = 700;

SELECT HTROONO, HTROOTYPE, HTROOPRICE, HTNO, HTROONAME
FROM tlbook.TBL_HT_ROOMS;

SELECT HTNO, HTNAME, HTRANK, HTADDRESS, HTTYPE, 
HTPHONE, HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE
FROM tlbook.TBL_HOTELS;

SELECT HTNO, COUNT(*) AS hotelSellRank
FROM tlbook.TBL_HT_SELL_TRANSACTIONS
GROUP BY HTNO;


COMMIT;


SELECT HTNO, HTNAME, HTRANK, rank AS hotelSellRank
FROM (
    SELECT H.HTNO, H.HTNAME, H.HTRANK, R.hotelSellRank, 
    RANK() OVER (ORDER BY R.hotelSellRank DESC, H.HTNO ASC) rank
    FROM tlbook.TBL_HOTELS H
    JOIN (
        SELECT HTNO, COUNT(*) AS hotelSellRank
        FROM tlbook.TBL_HT_SELL_TRANSACTIONS
        WHERE HTSELLSTATUS = '판매완료'
        GROUP BY HTNO
    ) R
    ON H.HTNO = R.HTNO
    WHERE R.hotelSellRank IS NOT NULL 
    ORDER BY 4 DESC NULLS LAST
)
WHERE rank <= 5;





SELECT HTNO, HTNAME, HTRANK, ROUND(avgstar ,1) AS htAvgGrade, rank
FROM (
    SELECT H.HTNO, H.HTNAME, H.HTRANK, R.avgstar, 
    RANK() OVER (ORDER BY R.avgstar DESC, H.HTNO ASC) rank
    FROM tlbook.TBL_HOTELS H
    JOIN (
        SELECT HTNO, AVG(
            CASE 
                WHEN HTREVSTAR IS NULL THEN 0
                ELSE HTREVSTAR
            END
        ) AS avgstar
        FROM tlbook.HT_REVIEWS
        GROUP BY HTNO
    ) R
    ON H.HTNO = R.HTNO
    WHERE R.avgstar IS NOT NULL 
    ORDER BY 4 DESC NULLS LAST
)
WHERE rank <= 5;

SELECT HTNO, HTNAME, HTRANK, HTADDRESS, HTTYPE, HTPHONE, 
HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE
FROM tlbook.TBL_HOTELS;

SELECT USERID, USERNAME, USEREMAIL, USERADDRESS,
USERMILEAGE, USERBDAY, USERPHONENUMBER
FROM tlbook.TBL_USERS;

SELECT USERID, USERNAME, USEREMAIL, USERADDRESS,
USERMILEAGE, USERBDAY, USERPHONENUMBER
FROM tlbook.TBL_USERS
WHERE USERID = 'userAdmin';


SELECT HTRESNO, HTRESNAME, HTRESSTATUS, HTRESPEOPLECOUNT, 
HTRESCHECKIN, HTRESCHECKOUT, HTRESEMAIL, HTRESPHONE, HTSELLTRANID
FROM tlbook.TBL_HT_RESERVATIONS
WHERE HTRESNO = 1;




SELECT HTROONO, HTROOTYPE, HTROOPRICE, HTNO, HTROONAME
FROM tlbook.TBL_HT_ROOMS;

-- 방판매 가능일 시퀀스
CREATE SEQUENCE tlbook.seq_HTROOMSELLDATE;

CREATE SEQUENCE tlbook.SEQ_HTRESERVATIONS;

CREATE SEQUENCE tlbook.seq_HTSELLTRANS;

SELECT SUM(HTROOSELLPRICE) AS HTSELLPRICE
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROOSELLDATE 
BETWEEN TO_TIMESTAMP('2023/07/01')
AND TO_TIMESTAMP('2023/07/30')
AND HTROONO = 700;


-- uuid 결제 행 
-- 결제 완료 후  트랜젝션으로 묶여야하는 sql
COMMIT;

-- 결제 페이지로 넘어가면 insert


INSERT INTO tlbook.TBL_HT_SELL_TRANSACTIONS
VALUES(
    tlbook.SEQ_HTSELLTRANS.NEXTVAL,
    'userAdmin',
    DEFAULT,
    '카드',
    DEFAULT,
    100003,
    500,
    'uuid'
);



SELECT HTRESNO, HTRESNAME, HTRESSTATUS, HTRESPEOPLECOUNT, 
HTRESCHECKIN, HTRESCHECKOUT, HTRESEMAIL, HTRESPHONE, HTSELLTRANID
FROM tlbook.TBL_HT_RESERVATIONS;



INSERT INTO TLBOOK.TBL_HT_RESERVATIONS
VALUES(
    tlbook.seq_HTRESERVATIONS.NEXTVAL,
    '김영환',
    1,
    1,
    TO_TIMESTAMP('2023/07/01'),
    TO_TIMESTAMP('2023/07/02'),
    'test@gmail.com',
    '010-1234-5678',
    (
        SELECT HTSELLTRANID
        FROM tlbook.TBL_HT_SELL_TRANSACTIONS
        WHERE SELLUUID = ''
    )
);

--넘겨줄건 roono resno HTNO  in out str

SELECT (
    CASE
        WHEN (TO_DATE('2023/07/14') - TO_DATE('2023/07/11')) = COUNT(*) 
        THEN 1
        ELSE 0
    END
) ableRes
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROONO = 700
AND HTRESNO IS NULL
AND HTROOSELLDATE BETWEEN TO_TIMESTAMP('2023/07/11')
AND TO_TIMESTAMP('2023/07/14')-1;

-- if count > 0

UPDATE tlbook.TBL_HT_ROOM_SELL_DATE
SET HTRESNO = 1
WHERE HTROONO = 700
AND HTROOSELLDATE BETWEEN TO_TIMESTAMP('2023/07/11')
AND TO_TIMESTAMP('2023/07/14')-1;

UPDATE tlbook.TBL_HT_SELL_TRANSACTIONS
SET HTSELLSTATUS = '판매완료',
HTSELLTRANDATE = SYSTIMESTAMP,
USERID = 'test504'
WHERE SELLUUID = '94e473fa-d414-4d49-9154-b9bdd9c375dc';

UPDATE tlbook.TBL_HT_RESERVATIONS
SET HTRESSTATUS = 1, 
HTSELLTRANID = (
    SELECT HTSELLTRANID
    FROM tlbook.TBL_HT_SELL_TRANSACTIONS
    WHERE SELLUUID = '94e473fa-d414-4d49-9154-b9bdd9c375dc'
)
WHERE HTRESNO = 1;

ROLLBACK;


COMMIT;

-- 방에 대한 모든 계약일자 조회
SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE, HTROONO, HTRESNO
FROM tlbook.TBL_HT_ROOM_SELL_DATE;

-- 방에 대한 판매 가능일 모두 조회
SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE, HTROONO, HTRESNO
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROONO = 700;

-- 방에 대한 판매가능일 예약가능한 일자 모두 조회
SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROONO = 700
AND HTRESNO IS NULL;

SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROONO = 701
AND HTRESNO IS NULL;

-- 예약 정보 읽어오기
SELECT HTRESNO, HTRESNAME, HTRESSTATUS, HTRESPEOPLECOUNT, 
HTRESCHECKIN, HTRESCHECKOUT, HTRESEMAIL, HTRESPHONE, HTSELLTRANID
FROM tlbook.TBL_HT_RESERVATIONS;

SELECT HTSELLTRANID, USERID, HTSELLTRANDATE, 
HTSELLTRANPAYMENT, HTSELLSTATUS, HTSELLPRICE
FROM tlbook.TBL_HT_SELL_TRANSACTIONS;

COMMIT;

-- 호텔 데이터 읽어오기
SELECT HTNO, HTNAME, HTRANK, HTADDRESS, HTTYPE, 
HTPHONE, HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE
FROM tlbook.TBL_HOTELS
WHERE HTNO = 5;

-- 테스트 호텔
INSERT INTO tlbook.TBL_HOTELS
VALUES(502,'테스트호텔2',5,'제주도','호텔','전번','테스트@gmail.com', 3, DEFAULT, DEFAULT, DEFAULT);

-- 테스트 방
INSERT INTO tlbook.TBL_HT_ROOMS
VALUES(707,'오션뷰',60000, 502, '테스트방이름');

COMMIT;

-- 방의 판매가능일 테이블 테스트 sql
INSERT INTO tlbook.TBL_HT_ROOM_SELL_DATE
VALUES(
    tlbook.seq_HTROOMSELLDATE.NEXTVAL, 
    50000,
    TO_TIMESTAMP('2023/06/10'),
    707,
    NULL
);


SELECT HTROOSELLDATEID, HTROOSELLPRICE, HTROOSELLDATE, HTROONO, HTRESNO
FROM tlbook.TBL_HT_ROOM_SELL_DATE
WHERE HTROONO = 700;

SELECT HTROONO, HTROOTYPE, HTROOPRICE, HTNO, HTROONAME
FROM tlbook.TBL_HT_ROOMS
WHERE HTROONO = 701;

UPDATE tlbook.TBL_HT_ROOM_SELL_DATE
SET HTROOSELLPRICE = 100
WHERE HTROONO = 700
AND HTROOSELLDATE BETWEEN TO_TIMESTAMP('2023/07/10')
AND TO_TIMESTAMP('2023/07/14');


SELECT HTNO, HTNAME, HTRANK, HTADDRESS, HTTYPE, 
HTPHONE, HTEMAIL, BUSID, HTSTARTDATE, HTENDDATE, HTAVAILDATE
FROM tlbook.TBL_HOTELS;

-- 방을 기준으로 join해서 호텔까지 읽기
SELECT R.HTROONO, R.HTROOTYPE, R.HTROOPRICE, R.HTNO, 
H.HTNAME, H.HTRANK, H.HTADDRESS, H.HTTYPE, H.HTPHONE, 
H.HTEMAIL, H.BUSID, H.HTSTARTDATE, H.HTENDDATE
FROM tlbook.TBL_HT_ROOMS R
INNER JOIN tlbook.TBL_HOTELS H
ON R.HTNO = H.HTNO
WHERE R.HTROONO = 700;

COMMIT;

-- 김영환 작업

--상세판매테이블 (tbl_ht_sell_transactions)
create table tlbook.tbl_ht_sell_transactions(
    htSellTranId number(10,0),
    userId VARCHAR2(30),
    htSellTranDate timestamp(0) default systimestamp(0),
    htSellTranPayment varchar2(20),
    htSellStatus varchar2(20) default '판매완료',
    htSellPrice number(10,2) 
)tablespace users;

-- tbl_ht_room_sell_date 테이블 생성 

create TABLE TLBOOK.tbl_ht_room_sell_date(
htRooSellDateId number(10,0),
htRooSellPrice number(10,2) not null,
htRooSellDate timestamp(0) default systimestamp(0),
htRooNo number(10,0),
htResNo number(10,0)
) tablespace users;

alter table TLBOOK.tbl_ht_room_sell_date
add CONSTRAINT pk_htRooSellDateId_sell_date PRIMARY key(htRooSellDateId);

alter table tlbook.tbl_ht_room_sell_date
add constraint fk_htRooNo_sell_date foreign key(htRooNo)
references tlbook.tbl_ht_rooms(htRooNo) on delete cascade;

-- 작업자 김영환 2306271125
-- 추가작업
-- ALTER TABLE TLBOOK.tbl_ht_room_sell_date
-- ADD htResNo number(10,0);
-- FK 예약이 되면 htresno에 값이 입력됨
alter table tlbook.tbl_ht_room_sell_date
add constraint fk_htResNo_sell_date foreign key(htResNo)
references tlbook.tbl_ht_reservations(htResNo);

-- tbl_ht_room_buy_date 테이블 생성 
create table TLBOOK.tbl_ht_room_buy_date(
htRooBuyDateId number(10,0),
htRooBuyPrice number(10,2) not null,
htRooBuyDate timestamp(0) default systimestamp(0),
htRooNo number(10,0)
)tablespace users;

alter table TLBOOK.tbl_ht_room_buy_date
add ConstraInt pk_htRooBuyDateId_buy_date primary key(htRooBuyDateId);


alter table tlbook.tbl_ht_room_buy_date
add constraint fk_htRooNo_buy_date foreign key(htRooNo)
references tlbook.tbl_ht_rooms(htRooNo) on delete cascade;


--숙소예약테이블 (tbl_ht_reservations )
CREATE TABLE tlbook.tbl_ht_reservations(
    htResNo number(10,0),
    htRooSellDateId number(10,0),
    htResName varchar2(30),
    htResStatus number(1,0),
    htResPeopleCount number(2,0),
    htResCheckIn timestamp(0) default systimestamp,
    htResCheckOut timestamp(0) default systimestamp,
    htResEmail varchar2(50) not null,
    htResPhone varchar2(15) not null
)tablespace users;

alter table tlbook.tbl_ht_reservations
add constraint pk_htResNo_ht_reserve
primary key(htResNo);


alter table tlbook.tbl_ht_reservations
add constraint fk_htRooSellDateId_ht_reserve
foreign key(htRooSellDateId) 
references tlbook.tbl_ht_room_sell_date(htRooSellDateId) ON DELETE CASCADE;

---tbl_hotels (숙소 테이블)
CREATE TABLE TLBOOK.tbl_hotels (
htNo NUMBER(10,0),
htName VARCHAR2(50) NOT NULL,
htRank NUMBER(1) DEFAULT 0,
htAddress VARCHAR2(100) NOT NULL,
htType VARCHAR2(50) NOT NULL,
htPhone VARCHAR2(10) NOT NULL,
htEmail VARCHAR2(50),
busId VARCHAR2(20),
htStartDate TIMESTAMP(0) DEFAULT SYSTIMESTAMP,
htEndDate TIMESTAMP(0) DEFAULT SYSTIMESTAMP
)TABLESPACE users;


ALTER TABLE TLBOOK.tbl_hotels
ADD CONSTRAINT pk_htNo_hotels PRIMARY KEY (htNo);

ALTER TABLE TLBOOK.tbl_hotels
ADD CONSTRAINT fk_busId_hotels FOREIGN KEY(busId)
REFERENCES TLBOOK.tbl_business_users(busId) ON DELETE CASCADE;

--tbl_ht_rooms (방 테이블)


--tbl_ht_rooms (방 테이블)
CREATE TABLE TLBOOK.tbl_ht_rooms (
htRooNo NUMBER(10,0),
htRooName VARCHAR(100),
htRooType VARCHAR2(50) NOT NULL,
htRooPrice NUMBER(10) NOT NULL,
htNo NUMBER (10,0) 
)TABLESPACE users;


-- 기본키 제약 조건 추가

ALTER TABLE TLBOOK.tbl_ht_rooms
ADD CONSTRAINT pk_htRooNo_ht_rooms PRIMARY KEY (htRooNo);

ALTER TABLE TLBOOK.tbl_ht_rooms
ADD CONSTRAINT fk_htNo_ht_rooms FOREIGN KEY(htNo)
REFERENCES TLBOOK.tbl_hotels(htNo) ON DELETE CASCADE;




-- 추가로 도와드린거
SELECT P.AIRPASNO, P.AIRRESNO, P.AIRPASNAME, P.AIRPASGENDER, P.AIRPASBDATE, P.AIRPASNATION, P.AIRDISCNTRATE,
R.AIRRESNO, R.AIRROUTENO, R.AIRLINEID, R.AIRSELLNO, R.AIRCLASS,
E.AIRROUTENO, E.AIRLINEID, E.DEPAIRPORTOID, E.ARRAIRPORTID, E.DEPPLANDTIME, E.ARRPLANDTIME, E.ECONOMYCHARGE, E.PRESTIGECHARGE, E.VIHICLEID, E.SEATCNT, E.AIRMODEL
FROM tlbook.TBL_AIR_PASSENGERS P
JOIN tlbook.TBL_AIR_RESERVATIONS R
ON P.AIRRESNO = R.AIRRESNO
JOIN tlbook.TBL_AIR_ROUTE E
ON R.AIRROUTENO = E.AIRROUTENO;

SELECT E.AIRROUTENO, E.AIRLINEID, E.DEPAIRPORTOID, E.ARRAIRPORTID, E.DEPPLANDTIME, E.ARRPLANDTIME, E.ECONOMYCHARGE, E.PRESTIGECHARGE, E.VIHICLEID, E.SEATCNT, E.AIRMODEL,
R.AIRRESNO, R.AIRROUTENO, R.AIRLINEID, R.AIRSELLNO, R.AIRCLASS,
p.AIRPASNO, P.AIRRESNO, P.AIRPASNAME, P.AIRPASGENDER, P.AIRPASBDATE, P.AIRPASNATION, P.AIRDISCNTRATE,
O.AIRRESNO, O.OPTWHEELFLAG, O.OPTPETFLAG, O.OPTRUGFLAG
FROM tlbook.TBL_AIR_ROUTE E
JOIN tlbook.TBL_AIR_RESERVATIONS R
ON E.AIRROUTENO = R.AIRROUTENO
LEFT JOIN tlbook.TBL_AIR_PASSENGERS P
ON R.AIRRESNO = p.AIRRESNO
LEFT JOIN tlbook.TBL_AIR_RESERVATION_OPTION O
ON R.AIRRESNO = O.AIRRESNO;